// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package au.org.intersect.sydma.webapp.domain;

import au.org.intersect.sydma.webapp.domain.ResearchGroup;
import java.lang.Boolean;
import java.lang.String;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect ResearchGroup_Roo_Finder {
    
    public static TypedQuery<ResearchGroup> ResearchGroup.findResearchGroupsByDirectoryPathEquals(String directoryPath) {
        if (directoryPath == null || directoryPath.length() == 0) throw new IllegalArgumentException("The directoryPath argument is required");
        EntityManager em = ResearchGroup.entityManager();
        TypedQuery<ResearchGroup> q = em.createQuery("SELECT o FROM ResearchGroup AS o WHERE o.directoryPath = :directoryPath", ResearchGroup.class);
        q.setParameter("directoryPath", directoryPath);
        return q;
    }
    
    public static TypedQuery<ResearchGroup> ResearchGroup.findResearchGroupsByIsPhysicalNot(Boolean isPhysical) {
        if (isPhysical == null) throw new IllegalArgumentException("The isPhysical argument is required");
        EntityManager em = ResearchGroup.entityManager();
        TypedQuery<ResearchGroup> q = em.createQuery("SELECT o FROM ResearchGroup AS o WHERE o.isPhysical IS NOT :isPhysical", ResearchGroup.class);
        q.setParameter("isPhysical", isPhysical);
        return q;
    }
    
    public static TypedQuery<ResearchGroup> ResearchGroup.findResearchGroupsByNameEquals(String name) {
        if (name == null || name.length() == 0) throw new IllegalArgumentException("The name argument is required");
        EntityManager em = ResearchGroup.entityManager();
        TypedQuery<ResearchGroup> q = em.createQuery("SELECT o FROM ResearchGroup AS o WHERE o.name = :name", ResearchGroup.class);
        q.setParameter("name", name);
        return q;
    }
    
}

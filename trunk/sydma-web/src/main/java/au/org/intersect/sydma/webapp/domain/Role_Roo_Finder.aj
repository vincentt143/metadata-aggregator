// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package au.org.intersect.sydma.webapp.domain;

import au.org.intersect.sydma.webapp.domain.Role;
import java.lang.String;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect Role_Roo_Finder {
    
    public static TypedQuery<Role> Role.findRolesByDisplayNameEquals(String displayName) {
        if (displayName == null || displayName.length() == 0) throw new IllegalArgumentException("The displayName argument is required");
        EntityManager em = Role.entityManager();
        TypedQuery<Role> q = em.createQuery("SELECT o FROM Role AS o WHERE o.displayName = :displayName", Role.class);
        q.setParameter("displayName", displayName);
        return q;
    }
    
    public static TypedQuery<Role> Role.findRolesByNameEquals(String name) {
        if (name == null || name.length() == 0) throw new IllegalArgumentException("The name argument is required");
        EntityManager em = Role.entityManager();
        TypedQuery<Role> q = em.createQuery("SELECT o FROM Role AS o WHERE o.name = :name", Role.class);
        q.setParameter("name", name);
        return q;
    }
    
    public static TypedQuery<Role> Role.findRolesByNameLike(String name) {
        if (name == null || name.length() == 0) throw new IllegalArgumentException("The name argument is required");
        name = name.replace('*', '%');
        if (name.charAt(0) != '%') {
            name = "%" + name;
        }
        if (name.charAt(name.length() - 1) != '%') {
            name = name + "%";
        }
        EntityManager em = Role.entityManager();
        TypedQuery<Role> q = em.createQuery("SELECT o FROM Role AS o WHERE LOWER(o.name) LIKE LOWER(:name)", Role.class);
        q.setParameter("name", name);
        return q;
    }
    
}

<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<!-- HTTP security configurations -->
	<global-method-security secured-annotations="enabled" />
	<http auto-config="true" use-expressions="true">
		<form-login login-processing-url="/resources/j_spring_security_check" login-page="/signin/index" authentication-failure-url="/login?login_error=t" default-target-url="/" always-use-default-target="true" />
		<logout logout-url="/resources/j_spring_security_logout" />

		<intercept-url pattern="/changepassword/**" access="hasRole('ROLE_RESEARCHER')" />
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMINISTRATOR') and hasRole('ACCEPTED_TC') and hasRole('ACTIVE')" />
		<intercept-url pattern="/home/**" access="hasAnyRole('ROLE_RESEARCHER','ROLE_ICT_SUPPORT','ROLE_ADMINISTRATOR') and hasRole('ACCEPTED_TC') and hasRole('ACTIVE')" />
		<intercept-url pattern="/upload/**" access="hasRole('ROLE_RESEARCHER') and hasRole('ACCEPTED_TC') and hasRole('ACTIVE')" />
		<intercept-url pattern="/transfer/**" access="hasRole('ROLE_RESEARCHER') and hasRole('ACCEPTED_TC') and hasRole('ACTIVE')" />
		<intercept-url pattern="/download/**" access="hasRole('ROLE_RESEARCHER') and hasRole('ACCEPTED_TC') and hasRole('ACTIVE')" />
		<intercept-url pattern="/researchgroup/**" access="hasAnyRole('ROLE_RESEARCHER','ROLE_ADMINISTRATOR') and hasRole('ACCEPTED_TC') and hasRole('ACTIVE')" />
		<intercept-url pattern="/researchproject/**" access="hasAnyRole('ROLE_RESEARCHER','ROLE_ADMINISTRATOR') and hasRole('ACCEPTED_TC') and hasRole('ACTIVE')" />
		<intercept-url pattern="/researchdataset/**" access="hasAnyRole('ROLE_RESEARCHER','ROLE_ADMINISTRATOR') and hasRole('ACCEPTED_TC') and hasRole('ACTIVE')" />
		<intercept-url pattern="/phycol/**" access="hasRole('ROLE_RESEARCH_DATA_MANAGER') and hasRole('ACCEPTED_TC') and hasRole('ACTIVE')" />
		<intercept-url pattern="/managedataset/**" access="hasAnyRole('ROLE_RESEARCHER','ROLE_ICT_SUPPORT') and hasRole('ACCEPTED_TC') and hasRole('ACTIVE')" />
		<intercept-url pattern="/rds/**" access="hasRole('ROLE_RESEARCHER') and hasRole('ACCEPTED_TC') and hasRole('ACTIVE')" />
		<intercept-url pattern="/usermanagement/**" access="hasAnyRole('ROLE_ADMINISTRATOR', 'ROLE_RESEARCHER','ROLE_ICT_SUPPORT') and hasRole('ACCEPTED_TC') and hasRole('ACTIVE')" />
		<intercept-url pattern="/permission/**" access="hasAnyRole('ROLE_RESEARCHER','ROLE_ICT_SUPPORT','ROLE_ADMINISTRATOR') and hasRole('ACCEPTED_TC') and hasRole('ACTIVE')" />
		<intercept-url pattern="/resources/**" access="permitAll" />
		<intercept-url pattern="/**" access="permitAll" />

		<custom-filter position="PRE_AUTH_FILTER" ref="preAuthenticatedProcessingFilter" />
	</http>
	
	<beans:bean id="wasmService" class="au.org.intersect.sydma.webapp.wasm.WASMService" />
	
	<beans:bean id="preAuthenticatedProcessingFilter" class="au.org.intersect.sydma.webapp.wasm.PreAuthenticatedProcessingFilter">
		<beans:property name="authenticationManager" ref="authenticationManager" />
	</beans:bean>

    <beans:bean id="userDetailsService" class="au.org.intersect.sydma.webapp.wasm.UserDetailsServiceImpl">
    </beans:bean>
    
    <beans:bean id="preauthAuthProvider"
                class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider">
        <beans:property name="preAuthenticatedUserDetailsService">
            <beans:bean id="userDetailsServiceWrapper"
                        class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
                <beans:property name="userDetailsService" ref="userDetailsService"/>
            </beans:bean>
        </beans:property>
    </beans:bean>

	<!-- Configure Authentication mechanism -->
    <authentication-manager alias="authenticationManager">
        <authentication-provider ref="preauthAuthProvider" />
    	
        <authentication-provider>
	    	<password-encoder hash="md5"/>
            <jdbc-user-service 
                data-source-ref="dataSource"
                users-by-username-query="SELECT U.username, U.password, U.enabled FROM users U where U.username=? AND U.user_type = 'INTERNAL'"
                authorities-by-username-query="SELECT U.username, A.name as authority FROM users U left join users_roles UA on U.id=UA.users left join roles A on UA.roles = A.id WHERE U.username=?" />
    	</authentication-provider>
	</authentication-manager>

</beans:beans>
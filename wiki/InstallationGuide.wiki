#summary Installation Guide


= Installing Application Requirements = 
 
This installion guide assumes you are installing on a clean CentOS 6 server (or similar Linux distribution) and therefore includes the installion of every tool and package you will need to setup and run the application.

Firstly we will install the Oracle java jdk 1.6 package.

On your local machine download the oracle java jdk 1.6 linux bin file from the oracle website

[http://www.oracle.com/technetwork/java/javase/downloads/jdk6downloads-1902814.html]

Then ssh into the server you wish to deploy to with the following command:
{{{
ssh [username]@[server name]
}}}

and run:
{{{
$ sudo su - 
$ yum install openssh-clients
}}}

In a seperate bash tab, locally run:
{{{
$ scp [download location]/jdk-6u[version]-linux-x64-rpm.bin [username]@[server name you are deploying to]:~
}}}

Close the local tab and back in the ssh session run:
{{{
$ chmod a+x jdk-6u[version]-linux-x64-rpm.bin
$ ./jdk-6u[version]-linux-x64-rpm.bin
}}}

{{{
$ alternatives --install /usr/bin/java java /usr/java/jdk1.6.0_39/jre/bin/java 20000
$ alternatives --install /usr/bin/javaws javaws /usr/java/jdk1.6.0_39/jre/bin/javaws 20000
$ alternatives --install /usr/bin/javac javac /usr/java/jdk1.6.0_39/bin/javac 20000
$ alternatives --install /usr/bin/jarsigner jarsigner /usr/java/jdk1.6.0_39/bin/jarsigner 20000
$ alternatives --install /usr/bin/jar jar /usr/java/jdk1.6.0_39/bin/jar 20000 
}}}


Now that Java is installed next we will setup MySQL
{{{
$ yum install mysql-server mysql
}}}

Set the MySQL service to start on boot
{{{
$ chkconfig --levels 235 mysqld on
}}}

Start the MySQL service
{{{
$ service mysqld start
}}}

Log into MySQL
{{{
mysql -u root
}}}

Create sydma db
{{{
create database sydma character set utf8;
CREATE USER 'sydma'@'localhost' IDENTIFIED BY 'sydma';
GRANT all privileges on sydma.* to 'sydma'@'localhost' with grant option; 
}}}
////////// devel populate db sh?

Install Apache Tomcat 6
{{{
$ yum -y install tomcat6 tomcat6-webapps tomcat6-admin-webapps
}}}

#some port forwarding here

Install Apache Maven version 2.2.1
{{{
$ wget http://mirror.overthewire.com.au/pub/apache/maven/maven-2/2.2.1/binaries/apache-maven-2.2.1-bin.tar.gz
$ tar xzf apache-maven-2.2.1-bin.tar.gz -C /usr/local
$ cd /usr/local
$ ln -s apache-maven-2.2.1 maven 
$ vi /etc/profile.d/maven.sh
}}}
Write these lines into the vi input
{{{
export M2_HOME=/usr/local/maven
export PATH=${M2_HOME}/bin:${PATH}
}}}

Exit the editor by entering :wq and then check that mvn is installed correctly by entering
{{{
$ mvn -version
}}}

Now we are ready to download the source code for this application

{{{
$ exit
$ cd home/[user]
$ mkdir staging
$ cd staging
$ yum install svn
$ svn checkout http://metadata-aggregator.googlecode.com/svn/trunk/ metadata-aggregator-read-only
$ svn checkout http://ammrf-dms.googlecode.com/svn/trunk/sdms sdms-read-only

$ sudo su -

$ cd sdms-read-only/lib
$ ./install.sh
$ cd ..
$ mvn clean
$ mvn install

$ cd ../metadata-aggregator-read-only/lib
$ ./install.sh
$ cd ..
$ mvn clean
$ mvn package
}}}

You need to config Tomcat. These instructions assume you have installed Tomcat in the default location od /usr/share/tomcat6

{{{
$ vi /etc/tomcat6/tomcat6.conf
}}}

Add the following lines to the config file below the existing JAVA_OPTS.

{{{
JAVA_OPTS="${JAVA_OPTS} -Ddms.config.home=/usr/share/tomcat6/mda-data/dms.home"
JAVA_OPTS="${JAVA_OPTS} -Dsolr.solr.home=/usr/share/tomcat6/mda-data/solr"
JAVA_OPTS="${JAVA_OPTS} -XX:MaxPermSize=256m -XX:+CMSClassUnloadingEnabled -Xmx1024m -Xms512m"
}}}


Now install Apache Solr:
{{{
$ wget http://archive.apache.org/dist/lucene/solr/1.4.1/apache-solr-1.4.1.tgz
$ tar xfz apache-solr-1.4.1.tgz
$ mv apache-solr-1.4.1/example/solr /opt
$ mv apache-solr-1.4.1/dist/apache-solr-1.4.1.war /opt/solr/solr.war
$ chown tomcat:tomcat -R /opt/solr

$ cat > /usr/share/tomcat6/conf/Catalina/localhost/solr.xml <<EOF

}}}

Then copy and paste this into the terminal and press enter:
{{{
<?xml version="1.0" encoding="utf-8"?>
<Context docBase="/opt/solr/solr.war" debug="0" crossContext="true">
  <Environment name="solr/home" type="java.lang.String" value="/opt/solr/" override="true"/>
</Context>
EOF
}}}

Now install JOAI:
{{{
$ wget --no-check-certificate https://sourceforge.net/projects/dlsciences/files/jOAI%20-%20OAI%20Provider_Harvester/v3.1.1.3/joai_v3.1.1.3.zip
$ yum install unzip
$ unzip joai_v3.1.1.3.zip
$ cp oai.war /var/lib/tomcat6/webapps/

$ chkconfig tomcat6 on && service tomcat6 restart
}}}





= Installation Profiles =

The software contains an installation script that depends on installation profiles. For each server where the system is to be deployed, the following configuration files are needed:
  # sydma-install/config configuration: where the dms, tunnel, and worker properties are customised, and where the system keys are in place. There are examples of some profiles in the source code, that can serve as a baseline.
  # Filter configuration. System specific properties that need to be accessible at runtime are stored in sydma-web/src/main/filters. Each deployment environment should have a filter file, where the environment specific variables are defined.

= Installation Script = 

To install the software, go to sydma-install/bin, and run
{{{
$ qa-installer.sh â€“h <environment>
}}}
The {{{<environment>}}} parameter needs to match:
  # A host name where it is possible to ssh/scp. We recommend setting your public key in the authorized_keys of the target environment, to avoid having to enter the password multiple times. 
  # A directory under sydma-intall/config
  # A filter called  {{{filter-<environment>.properties}}} under sydma-web/src/main/filters
  
  
  